import { getArticlesCollection } from "../lib/mongodb.js";

// Art√≠culos de ejemplo para inicializar la base de datos
const sampleArticles = [
  {
    title: "Primera publicaci√≥n en MongoDB",
    briefDescription: "Esta es la primera publicaci√≥n almacenada en MongoDB.",
    description: `# Mi Primera Publicaci√≥n en MongoDB

¬°Bienvenido a nuestro blog con MongoDB! Esta es tu primera publicaci√≥n almacenada en la base de datos.

## Lo que aprender√°s

En esta publicaci√≥n aprender√°s sobre:
- C√≥mo almacenar contenido din√°mico en MongoDB
- Integraci√≥n con bases de datos NoSQL
- APIs conectadas a MongoDB en Astro

## Caracter√≠sticas

- **Almacenamiento persistente**: Los datos se guardan en MongoDB Atlas
- **Escalabilidad**: Soporta miles de art√≠culos
- **Flexibilidad**: Esquema din√°mico para contenido variable

¬°Disfruta explorando nuestro nuevo sistema!`,
    cardImage: "/src/assets/blog-placeholder-1.jpg",
    articleImage: "/src/assets/blog-placeholder-1.jpg",
    publishedAt: "2025-07-01T09:00:00Z",
    category: "Noticias de IA",
    slug: "primera-publicacion-mongodb",
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    title: "Tutorial: Configurando MongoDB con Astro",
    briefDescription:
      "Aprende a integrar MongoDB con tu proyecto Astro para crear un blog din√°mico.",
    description: `# Configurando MongoDB con Astro

En este tutorial aprender√°s a integrar MongoDB con Astro para crear un sistema de blog completamente din√°mico.

## Requisitos previos

Antes de comenzar, aseg√∫rate de tener:
- Node.js 18 o superior
- Cuenta en MongoDB Atlas
- Conocimientos b√°sicos de JavaScript

## Instalaci√≥n y Configuraci√≥n

### Paso 1: Instalar dependencias

\`\`\`bash
npm install mongodb
\`\`\`

### Paso 2: Configurar variables de entorno

\`\`\`env
MONGODB_URI="tu_connection_string_de_mongodb"
MONGODB_DB="nombre_de_tu_base_de_datos"
\`\`\`

### Paso 3: Crear utilidades de conexi√≥n

\`\`\`javascript
import { MongoClient } from 'mongodb';

export async function connectToDatabase() {
  const client = new MongoClient(process.env.MONGODB_URI);
  await client.connect();
  return client.db(process.env.MONGODB_DB);
}
\`\`\`

## Beneficios de MongoDB

- **Flexibilidad**: Esquemas din√°micos
- **Escalabilidad**: Crece con tu aplicaci√≥n
- **Performance**: Consultas r√°pidas
- **Cloud**: MongoDB Atlas simplifica el hosting

¬°Ya tienes tu base de datos configurada!`,
    cardImage: "/src/assets/blog-placeholder-2.jpg",
    articleImage: "/src/assets/blog-placeholder-2.jpg",
    publishedAt: "2025-07-01T10:30:00Z",
    category: "Tutoriales de IA",
    slug: "tutorial-mongodb-astro",
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  {
    title: "MongoDB vs SQL: ¬øCu√°l elegir para tu blog?",
    briefDescription:
      "Comparativa detallada entre MongoDB y bases de datos SQL para proyectos de contenido.",
    description: `# MongoDB vs SQL: La elecci√≥n correcta

La elecci√≥n entre MongoDB y bases de datos SQL depende de muchos factores. Analicemos cada opci√≥n.

## MongoDB: La opci√≥n NoSQL

### Ventajas
- **Flexibilidad**: Esquemas din√°micos permiten evoluci√≥n
- **Escalabilidad horizontal**: F√°cil distribuci√≥n
- **JSON nativo**: Perfecto para APIs REST
- **Desarrollo r√°pido**: Menos configuraci√≥n inicial

### Desventajas
- **Consistencia**: ACID limitado comparado con SQL
- **Consultas complejas**: Menos potente que SQL
- **Curva de aprendizaje**: Diferentes conceptos

## SQL: La opci√≥n tradicional

### Ventajas
- **ACID completo**: Transacciones robustas
- **SQL est√°ndar**: Amplio conocimiento en el mercado
- **Consultas complejas**: JOINs y an√°lisis avanzados
- **Herramientas**: Ecosistema maduro

### Desventajas
- **Rigidez**: Esquemas fijos dificultan cambios
- **Escalabilidad**: M√°s compleja horizontalmente
- **ORM**: Necesidad de mapeo objeto-relacional

## Para Blogs y CMS

MongoDB es ideal para:
- Contenido variable (art√≠culos, multimedia, comentarios)
- Desarrollo √°gil con cambios frecuentes
- APIs JSON-first
- Escalabilidad simple

SQL es mejor para:
- Sistemas con relaciones complejas
- Reportes y an√°lisis avanzados
- Equipos con experiencia SQL
- Consistencia cr√≠tica

## Conclusi√≥n

Para nuestro blog de IA, MongoDB ofrece la flexibilidad perfecta para manejar contenido diverso y permitir evoluci√≥n r√°pida del esquema.`,
    cardImage: "/src/assets/blog-placeholder-3.jpg",
    articleImage: "/src/assets/blog-placeholder-3.jpg",
    publishedAt: "2025-07-01T14:15:00Z",
    category: "Modelos Generativos",
    slug: "mongodb-vs-sql-comparativa",
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
];

export async function initializeDatabase() {
  try {
    const collection = await getArticlesCollection();

    // Verificar si ya hay art√≠culos
    const existingCount = await collection.countDocuments();

    if (existingCount === 0) {
      console.log("üöÄ Inicializando base de datos con art√≠culos de ejemplo...");

      // Insertar art√≠culos de ejemplo
      const result = await collection.insertMany(sampleArticles);

      console.log(
        `‚úÖ ${result.insertedCount} art√≠culos insertados exitosamente`
      );
      console.log("üéâ Base de datos inicializada");

      return {
        success: true,
        insertedCount: result.insertedCount,
        message: "Base de datos inicializada con art√≠culos de ejemplo",
      };
    } else {
      console.log(`‚ÑπÔ∏è  Base de datos ya contiene ${existingCount} art√≠culos`);
      return {
        success: true,
        existingCount,
        message: "Base de datos ya inicializada",
      };
    }
  } catch (error) {
    console.error("‚ùå Error inicializando base de datos:", error);
    return {
      success: false,
      error: error.message,
    };
  }
}
